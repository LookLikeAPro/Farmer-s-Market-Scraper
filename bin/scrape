#!/usr/bin/env ruby
require "bundler/setup"
require "farm_scraper"
require "scrapers"
require "geolocation"
require "merge_csv"
require "csv"

def write_csv(file, farms)
	CSV.open(file, "wb") do |csv|
		csv << [
			"name",
			"street",
			"city",
			"province",
			"country",
			"address_dump",
			"postal_code",
			"phone",
			"hours",
			"link",
			"products",
			"products_grown",
			"products_pick"
		]
		farms.each do |farm|
			csv << [
				farm["name"],
				farm["street"],
				farm["city"],
				farm["province"],
				farm["country"],
				farm["address_dump"],
				farm["postal_code"],
				farm["phone"],
				farm["hours"],
				farm["link"],
				farm["products"],
				farm["products_grown"],
				farm["products_pick"]
			]
		end
	end
end

def write_file(file, data)
	CSV.open(file, "w") do |csv|
		csv << data.first.keys
		data.each do |h|
			csv << h.values
		end
	end
end

MSG = <<END
Farm Scraper v#{FarmScraper::VERSION}
By Jerry Zhou (http://jerryzhou.net/)

# Commands:
scrape [scraper] [output_file]: Scrapes using specified scraper

# Avaliable Scrapers:
ontariofarmfresh

END

command = ARGV.shift
case command
when "scrape"
	scraper_name = ARGV.shift
	file = ARGV.shift || "data.csv"
	farms = Scraper.run(scraper_name)
	if farms
		write_file(file, farms)
	end
when "geo"
	file = "data/"+ARGV.shift || "data/data.csv"
	geolocator = Geolocation::Geolocator.new()
	geolocator.run(file)
when "merge"
	file_name = ARGV.shift
	file1_path = "data/"+file_name+"_DETAIL.csv"
	file2_path = "data/"+file_name+"_GEO.csv"
	product_path = "data/"+file_name+".csv"
	MergeCsv.run(product_path, file1_path, file2_path)
else
	puts MSG
end

